
Serial.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001fa  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  0000024e  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000038  00000000  00000000  0000027e  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000163  00000000  00000000  000002b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000e5  00000000  00000000  00000419  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000140  00000000  00000000  000004fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000054  00000000  00000000  00000640  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000016d  00000000  00000000  00000694  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    0000002c  00000000  00000000  00000801  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000028  00000000  00000000  0000082d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	79 c0       	rjmp	.+242    	; 0xf8 <__bad_interrupt>
   6:	00 00       	nop
   8:	77 c0       	rjmp	.+238    	; 0xf8 <__bad_interrupt>
   a:	00 00       	nop
   c:	75 c0       	rjmp	.+234    	; 0xf8 <__bad_interrupt>
   e:	00 00       	nop
  10:	73 c0       	rjmp	.+230    	; 0xf8 <__bad_interrupt>
  12:	00 00       	nop
  14:	71 c0       	rjmp	.+226    	; 0xf8 <__bad_interrupt>
  16:	00 00       	nop
  18:	6f c0       	rjmp	.+222    	; 0xf8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6d c0       	rjmp	.+218    	; 0xf8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	6b c0       	rjmp	.+214    	; 0xf8 <__bad_interrupt>
  22:	00 00       	nop
  24:	69 c0       	rjmp	.+210    	; 0xf8 <__bad_interrupt>
  26:	00 00       	nop
  28:	67 c0       	rjmp	.+206    	; 0xf8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	65 c0       	rjmp	.+202    	; 0xf8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	63 c0       	rjmp	.+198    	; 0xf8 <__bad_interrupt>
  32:	00 00       	nop
  34:	61 c0       	rjmp	.+194    	; 0xf8 <__bad_interrupt>
  36:	00 00       	nop
  38:	5f c0       	rjmp	.+190    	; 0xf8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5d c0       	rjmp	.+186    	; 0xf8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5b c0       	rjmp	.+182    	; 0xf8 <__bad_interrupt>
  42:	00 00       	nop
  44:	59 c0       	rjmp	.+178    	; 0xf8 <__bad_interrupt>
  46:	00 00       	nop
  48:	57 c0       	rjmp	.+174    	; 0xf8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	55 c0       	rjmp	.+170    	; 0xf8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	53 c0       	rjmp	.+166    	; 0xf8 <__bad_interrupt>
  52:	00 00       	nop
  54:	51 c0       	rjmp	.+162    	; 0xf8 <__bad_interrupt>
  56:	00 00       	nop
  58:	4f c0       	rjmp	.+158    	; 0xf8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4d c0       	rjmp	.+154    	; 0xf8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	4b c0       	rjmp	.+150    	; 0xf8 <__bad_interrupt>
  62:	00 00       	nop
  64:	49 c0       	rjmp	.+146    	; 0xf8 <__bad_interrupt>
  66:	00 00       	nop
  68:	47 c0       	rjmp	.+142    	; 0xf8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	45 c0       	rjmp	.+138    	; 0xf8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	43 c0       	rjmp	.+134    	; 0xf8 <__bad_interrupt>
  72:	00 00       	nop
  74:	41 c0       	rjmp	.+130    	; 0xf8 <__bad_interrupt>
  76:	00 00       	nop
  78:	3f c0       	rjmp	.+126    	; 0xf8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3d c0       	rjmp	.+122    	; 0xf8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	3b c0       	rjmp	.+118    	; 0xf8 <__bad_interrupt>
  82:	00 00       	nop
  84:	39 c0       	rjmp	.+114    	; 0xf8 <__bad_interrupt>
  86:	00 00       	nop
  88:	37 c0       	rjmp	.+110    	; 0xf8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	35 c0       	rjmp	.+106    	; 0xf8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	33 c0       	rjmp	.+102    	; 0xf8 <__bad_interrupt>
  92:	00 00       	nop
  94:	31 c0       	rjmp	.+98     	; 0xf8 <__bad_interrupt>
  96:	00 00       	nop
  98:	2f c0       	rjmp	.+94     	; 0xf8 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	2d c0       	rjmp	.+90     	; 0xf8 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	2b c0       	rjmp	.+86     	; 0xf8 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	29 c0       	rjmp	.+82     	; 0xf8 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	27 c0       	rjmp	.+78     	; 0xf8 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	25 c0       	rjmp	.+74     	; 0xf8 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	23 c0       	rjmp	.+70     	; 0xf8 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	21 c0       	rjmp	.+66     	; 0xf8 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	1f c0       	rjmp	.+62     	; 0xf8 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	1d c0       	rjmp	.+58     	; 0xf8 <__bad_interrupt>
  be:	00 00       	nop
  c0:	1b c0       	rjmp	.+54     	; 0xf8 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	19 c0       	rjmp	.+50     	; 0xf8 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	17 c0       	rjmp	.+46     	; 0xf8 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	15 c0       	rjmp	.+42     	; 0xf8 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	13 c0       	rjmp	.+38     	; 0xf8 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	11 c0       	rjmp	.+34     	; 0xf8 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	0f c0       	rjmp	.+30     	; 0xf8 <__bad_interrupt>
  da:	00 00       	nop
  dc:	0d c0       	rjmp	.+26     	; 0xf8 <__bad_interrupt>
  de:	00 00       	nop
  e0:	0b c0       	rjmp	.+22     	; 0xf8 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	38 d0       	rcall	.+112    	; 0x166 <main>
  f6:	7f c0       	rjmp	.+254    	; 0x1f6 <_exit>

000000f8 <__bad_interrupt>:
  f8:	83 cf       	rjmp	.-250    	; 0x0 <__vectors>

000000fa <serial_open>:
        serial_write(serial_read());
   }
}

void serial_open(long speed, int config){
	int ubrr = (F_CPU/(16*speed))-1;
  fa:	dc 01       	movw	r26, r24
  fc:	cb 01       	movw	r24, r22
  fe:	88 0f       	add	r24, r24
 100:	99 1f       	adc	r25, r25
 102:	aa 1f       	adc	r26, r26
 104:	bb 1f       	adc	r27, r27
 106:	88 0f       	add	r24, r24
 108:	99 1f       	adc	r25, r25
 10a:	aa 1f       	adc	r26, r26
 10c:	bb 1f       	adc	r27, r27
 10e:	9c 01       	movw	r18, r24
 110:	ad 01       	movw	r20, r26
 112:	22 0f       	add	r18, r18
 114:	33 1f       	adc	r19, r19
 116:	44 1f       	adc	r20, r20
 118:	55 1f       	adc	r21, r21
 11a:	22 0f       	add	r18, r18
 11c:	33 1f       	adc	r19, r19
 11e:	44 1f       	adc	r20, r20
 120:	55 1f       	adc	r21, r21
 122:	60 e0       	ldi	r22, 0x00	; 0
 124:	74 e2       	ldi	r23, 0x24	; 36
 126:	84 ef       	ldi	r24, 0xF4	; 244
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	27 d0       	rcall	.+78     	; 0x17a <__divmodsi4>
 12c:	21 50       	subi	r18, 0x01	; 1
 12e:	31 09       	sbc	r19, r1
	UBRR0H = ubrr >> 8;
 130:	30 93 c5 00 	sts	0x00C5, r19
	UBRR0L = ubrr & 0xff;
 134:	20 93 c4 00 	sts	0x00C4, r18
	
	/*UBRR0H = UBRRH_VALUE;
	UBRR0L = UBRRL_VALUE;*/
	
	/*Modify this with config for the various serial values*/
	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00);
 138:	86 e0       	ldi	r24, 0x06	; 6
 13a:	80 93 c2 00 	sts	0x00C2, r24
	
	UCSR0B = _BV(RXEN0) | _BV(TXEN0); //Transmission Status
 13e:	88 e1       	ldi	r24, 0x18	; 24
 140:	80 93 c1 00 	sts	0x00C1, r24
 144:	08 95       	ret

00000146 <serial_read>:
}

char serial_read(){
	loop_until_bit_is_set(UCSR0A, RXC0);
 146:	e0 ec       	ldi	r30, 0xC0	; 192
 148:	f0 e0       	ldi	r31, 0x00	; 0
 14a:	80 81       	ld	r24, Z
 14c:	88 23       	and	r24, r24
 14e:	ec f7       	brge	.-6      	; 0x14a <serial_read+0x4>
	return UDR0;
 150:	80 91 c6 00 	lds	r24, 0x00C6
}
 154:	08 95       	ret

00000156 <serial_write>:

void serial_write(char c){
	loop_until_bit_is_set(UCSR0A, UDRE0);
 156:	e0 ec       	ldi	r30, 0xC0	; 192
 158:	f0 e0       	ldi	r31, 0x00	; 0
 15a:	90 81       	ld	r25, Z
 15c:	95 ff       	sbrs	r25, 5
 15e:	fd cf       	rjmp	.-6      	; 0x15a <serial_write+0x4>
	UDR0 = c;
 160:	80 93 c6 00 	sts	0x00C6, r24
 164:	08 95       	ret

00000166 <main>:
char serial_read();
void serial_write(char c);

int main(void)
{
	serial_open(9600, 0);
 166:	40 e0       	ldi	r20, 0x00	; 0
 168:	50 e0       	ldi	r21, 0x00	; 0
 16a:	60 e8       	ldi	r22, 0x80	; 128
 16c:	75 e2       	ldi	r23, 0x25	; 37
 16e:	80 e0       	ldi	r24, 0x00	; 0
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	c3 df       	rcall	.-122    	; 0xfa <serial_open>
    while(1)
    {
        serial_write(serial_read());
 174:	e8 df       	rcall	.-48     	; 0x146 <serial_read>
 176:	ef df       	rcall	.-34     	; 0x156 <serial_write>
 178:	fd cf       	rjmp	.-6      	; 0x174 <main+0xe>

0000017a <__divmodsi4>:
 17a:	05 2e       	mov	r0, r21
 17c:	97 fb       	bst	r25, 7
 17e:	16 f4       	brtc	.+4      	; 0x184 <__divmodsi4+0xa>
 180:	00 94       	com	r0
 182:	0f d0       	rcall	.+30     	; 0x1a2 <__negsi2>
 184:	57 fd       	sbrc	r21, 7
 186:	05 d0       	rcall	.+10     	; 0x192 <__divmodsi4_neg2>
 188:	14 d0       	rcall	.+40     	; 0x1b2 <__udivmodsi4>
 18a:	07 fc       	sbrc	r0, 7
 18c:	02 d0       	rcall	.+4      	; 0x192 <__divmodsi4_neg2>
 18e:	46 f4       	brtc	.+16     	; 0x1a0 <__divmodsi4_exit>
 190:	08 c0       	rjmp	.+16     	; 0x1a2 <__negsi2>

00000192 <__divmodsi4_neg2>:
 192:	50 95       	com	r21
 194:	40 95       	com	r20
 196:	30 95       	com	r19
 198:	21 95       	neg	r18
 19a:	3f 4f       	sbci	r19, 0xFF	; 255
 19c:	4f 4f       	sbci	r20, 0xFF	; 255
 19e:	5f 4f       	sbci	r21, 0xFF	; 255

000001a0 <__divmodsi4_exit>:
 1a0:	08 95       	ret

000001a2 <__negsi2>:
 1a2:	90 95       	com	r25
 1a4:	80 95       	com	r24
 1a6:	70 95       	com	r23
 1a8:	61 95       	neg	r22
 1aa:	7f 4f       	sbci	r23, 0xFF	; 255
 1ac:	8f 4f       	sbci	r24, 0xFF	; 255
 1ae:	9f 4f       	sbci	r25, 0xFF	; 255
 1b0:	08 95       	ret

000001b2 <__udivmodsi4>:
 1b2:	a1 e2       	ldi	r26, 0x21	; 33
 1b4:	1a 2e       	mov	r1, r26
 1b6:	aa 1b       	sub	r26, r26
 1b8:	bb 1b       	sub	r27, r27
 1ba:	fd 01       	movw	r30, r26
 1bc:	0d c0       	rjmp	.+26     	; 0x1d8 <__udivmodsi4_ep>

000001be <__udivmodsi4_loop>:
 1be:	aa 1f       	adc	r26, r26
 1c0:	bb 1f       	adc	r27, r27
 1c2:	ee 1f       	adc	r30, r30
 1c4:	ff 1f       	adc	r31, r31
 1c6:	a2 17       	cp	r26, r18
 1c8:	b3 07       	cpc	r27, r19
 1ca:	e4 07       	cpc	r30, r20
 1cc:	f5 07       	cpc	r31, r21
 1ce:	20 f0       	brcs	.+8      	; 0x1d8 <__udivmodsi4_ep>
 1d0:	a2 1b       	sub	r26, r18
 1d2:	b3 0b       	sbc	r27, r19
 1d4:	e4 0b       	sbc	r30, r20
 1d6:	f5 0b       	sbc	r31, r21

000001d8 <__udivmodsi4_ep>:
 1d8:	66 1f       	adc	r22, r22
 1da:	77 1f       	adc	r23, r23
 1dc:	88 1f       	adc	r24, r24
 1de:	99 1f       	adc	r25, r25
 1e0:	1a 94       	dec	r1
 1e2:	69 f7       	brne	.-38     	; 0x1be <__udivmodsi4_loop>
 1e4:	60 95       	com	r22
 1e6:	70 95       	com	r23
 1e8:	80 95       	com	r24
 1ea:	90 95       	com	r25
 1ec:	9b 01       	movw	r18, r22
 1ee:	ac 01       	movw	r20, r24
 1f0:	bd 01       	movw	r22, r26
 1f2:	cf 01       	movw	r24, r30
 1f4:	08 95       	ret

000001f6 <_exit>:
 1f6:	f8 94       	cli

000001f8 <__stop_program>:
 1f8:	ff cf       	rjmp	.-2      	; 0x1f8 <__stop_program>
